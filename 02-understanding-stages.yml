# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  jobs:
   - job: FirstJob
     steps:
     - bash: echo Build FirstJob
     - bash: echo $(PipeplineLevelVariable)
     - bash: echo $(Build.BuildNumber)
     - bash: echo $(Build.BuildId)
     - bash: echo $(Build.SourceBranchName)
     - bash: echo $(Build.SourceDirectory)
     - bash: echo $(Build.DefaultWorkingDirectory)
     - bash: ls -R $(Build.DefaultWorkingDirectory)
     - bash: echo $(Build.ArtifactStagingDirectory)
     - bash: java -version
     - bash: node --version
     - bash: python --version
     - bash: mvn -version
     - bash: ls -R $(Build.ArtifactStagingDirectory)
     - task: CopyFiles@2
       inputs:
        SourceFolder: '$(Build.DefaultWorkingDirectory)'
        Contents: |
            **/*.yaml
            **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
     - bash: ls -R $(Build.ArtifactStagingDirectory)
     - task: PublishBuildArtifacts@1
       inputs:
         PathtoPublish: '$(Build.ArtifactStagingDirectory)'
         ArtifactName: 'drop'
         publishLocation: 'Container'
     
    
  #  - job: SecondJob
  #    steps:
  #    - bash: echo Build SecondJob
# - stage: DevDeploy
#   variables:
#     enviornment: Dev
#   dependsOn: Build
#   jobs:
#    - job: DevFirstJob
#      steps:
#      - bash: echo $(enviornment) FirstJob
# - stage: QADeploy
#   dependsOn: DevDeploy
#   jobs:
#    - job: QAFirstJob
#      steps:
#      - bash: echo QA FirstJob
# - stage: ProdDeploy
#   dependsOn:
#     - DevDeploy
#     - QADeploy
#   jobs:
#    - job: ProdFirstJob
#      steps:
#      - bash: echo Prod FirstJob